# Warning: This file is generated automatically, and should not be modified.
# Instead, please modify the template in the pr-checks directory and run:
#     pip install ruamel.yaml && python3 sync.py
# to regenerate this file.

name: PR Check - Swift analysis using autobuild
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GO111MODULE: auto
on:
  push:
    branches:
    - main
    - releases/v1
    - releases/v2
  pull_request:
    types:
    - opened
    - synchronize
    - reopened
    - ready_for_review
  workflow_dispatch: {}
jobs:
  swift-autobuild:
    strategy:
      matrix:
        include:
        - os: macos-latest
          version: latest
        - os: macos-latest
          version: cached
        - os: macos-latest
          version: nightly-latest
    name: Swift analysis using autobuild
    timeout-minutes: 45
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Prepare test
      id: prepare-test
      uses: ./.github/prepare-test
      with:
        version: ${{ matrix.version }}
    - uses: ./../action/init
      id: init
      with:
        languages: swift
        tools: ${{ steps.prepare-test.outputs.tools-url }}
    - name: Get Swift version
      id: get_swift_version
      shell: bash
      env:
        CODEQL_PATH: ${{steps.init.outputs.codeql-path}}
      run: |
        SWIFT_EXTRACTOR_DIR=$("$CODEQL_PATH" resolve languages --format json | jq -r '.swift[0]')
        VERSION=$($SWIFT_EXTRACTOR_DIR/tools/osx64/extractor --version | awk '/version/ { print $3 }') # Update platform if more operating systems are added to this test.
        if [ $VERSION = "5.7" ]; then
          VERSION="5.7.0"
        fi
        echo "version=$VERSION" | tee -a $GITHUB_OUTPUT
    - uses: swift-actions/setup-swift@194625b58a582570f61cc707c3b558086c26b723
      with:
        swift-version: ${{steps.get_swift_version.outputs.version}}
    - uses: ./../action/autobuild
    - uses: ./../action/analyze
      id: analysis
    - name: Check database
      shell: bash
      run: |
        SWIFT_DB="${{ fromJson(steps.analysis.outputs.db-locations).swift }}"
        if [[ ! -d "$SWIFT_DB" ]]; then
          echo "Did not create a database for Swift."
          exit 1
        fi
    env:
      CODEQL_ENABLE_EXPERIMENTAL_FEATURES_SWIFT: 'true' # Remove when Swift is GA.
      CODEQL_ACTION_TEST_MODE: true
