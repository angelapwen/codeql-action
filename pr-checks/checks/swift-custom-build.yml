name: "Swift analysis using a custom build command"
description: "Tests creation of a Swift database using custom build"
versions: ["latest", "cached", "nightly-latest"]
operatingSystems: ["ubuntu", "macos"]
env:
  CODEQL_ENABLE_EXPERIMENTAL_FEATURES_SWIFT: "true" # Remove when Swift is GA.
  DOTNET_GENERATE_ASPNET_CERTIFICATE: "false"
steps:
  - uses: ./../action/init
    id: init
    with:
      languages: swift
      tools: ${{ steps.prepare-test.outputs.tools-url }}
  - name: Get Swift version
    id: get_swift_version
    shell: bash
    env: 
      CODEQL_PATH: ${{steps.init.outputs.codeql-path}}
    run: |
      if [ $RUNNER_OS = "macOS" ]; then
        PLATFORM="osx64"
      else # We do not run this test on Windows.
        PLATFORM="linux64"
      fi 
      SWIFT_EXTRACTOR_DIR=$("$CODEQL_PATH" resolve languages --format json | jq -r '.swift[0]')
      VERSION=$($SWIFT_EXTRACTOR_DIR/tools/$PLATFORM/extractor --version | awk '/version/ { print $3 }')
      # Specify 5.7.0, otherwise setup Action will default to latest minor version. 
      if [ $VERSION = "5.7" ]; then
        VERSION="5.7.0"
      fi
      echo "version=$VERSION" | tee -a $GITHUB_OUTPUT
  - uses: swift-actions/setup-swift@194625b58a582570f61cc707c3b558086c26b723
    with:
      swift-version: "${{steps.get_swift_version.outputs.version}}"
  - name: Build code
    shell: bash
    run: ./build.sh
  - uses: ./../action/analyze
    id: analysis
  - name: Check database
    shell: bash
    run: |
      SWIFT_DB="${{ fromJson(steps.analysis.outputs.db-locations).swift }}"
      if [[ ! -d "$SWIFT_DB" ]]; then
        echo "Did not create a database for Swift."
        exit 1
      fi
